#
msgid ""
msgstr "Content-Type: text/plain; charset=UTF-8\n"

#. type: Title #
#: /home/dev/download/weex_doc/weex/doc/advanced/how-data-binding-works.md:1
#, no-wrap
msgid "How data-binding works"
msgstr "How data-binding works"

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/advanced/how-data-binding-works.md:4
msgid ""
"Weex JS Framework is a MVVM framework. It observe data and use "
"`{{bindedKey}}` syntax to bind in views. When data is changed in anyway, the"
" view will automatically be updated due to data-binding."
msgstr ""
"Weex JS Framework is a MVVM framework. It observe data and use "
"`{{bindedKey}}` syntax to bind in views. When data is changed in anyway, the"
" view will automatically be updated due to data-binding."

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/advanced/how-data-binding-works.md:6
#, no-wrap
msgid ""
"For example, The content of a `<text>` component is bound with the key "
"`notes` in data:\n"
msgstr ""
"For example, The content of a `<text>`` component is bound with the key "
"``notes` in data:\n"

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/advanced/how-data-binding-works.md:13
#, no-wrap
msgid ""
"```\n"
"<template>\n"
"  <div>\n"
"    <text>{{notes}}</text>\n"
"  </div>\n"
"<template>\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/advanced/how-data-binding-works.md:22
#, no-wrap
msgid ""
"<script>\n"
"  module.exports = {\n"
"    data: {\n"
"        notes: 'Hello'\n"
"    }\n"
"  }\n"
"</script>\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/advanced/how-data-binding-works.md:24
#, no-wrap
msgid ""
"Weex JS Framework first observe the data object to make sure each data "
"change in the future will be observed. And then it will compile the whole "
"`<template>`. When it finds that the content of the `<text>` is bound with "
"`notes`, JS Framework will watch the `data.notes` changes and set a handler "
"which will update the `<text>` content with new `data.notes`. So developer "
"only need to manage the data, the view display could automatically do "
"corresponding changes.\n"
msgstr ""
"Weex JS Framework first observe the data object to make sure each data "
"change in the future will be observed. And then it will compile the whole "
"`<template>``. When it finds that the content of the ``<text>`` is bound "
"with ``notes``, JS Framework will watch the ``data.notes`` changes and set a"
" handler which will update the ``<text>`` content with new ``data.notes`. So"
" developer only need to manage the data, the view display could "
"automatically do corresponding changes.\n"

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/advanced/how-data-binding-works.md:26
msgid "Some special data-binding syntax here:"
msgstr "Some special data-binding syntax here:"

#. type: Bullet: '* '
#: /home/dev/download/weex_doc/weex/doc/advanced/how-data-binding-works.md:30
msgid ""
"`<foo if=\"{{condition}}\">` will watch the condition value changes. When it"
" changes to `true`, the `<foo>` element will be created and attached, "
"otherwise it will be not created or removed."
msgstr ""
"`<foo if=\"{{condition}}\">`` will watch the condition value changes. When "
"it changes to ``true``, the ``<foo>`元素将被创建和连接，否则将不能创建或删除。 ???"

#. type: Bullet: '* '
#: /home/dev/download/weex_doc/weex/doc/advanced/how-data-binding-works.md:30
msgid ""
"`<foo repeat=\"{{list}}\">` will watch the mutations of a list. At the "
"beginning the `<foo>` element will be cloned and attached with each item in "
"list. When some items are added, removed or moved, the `<foo>` element list "
"will be re-generated new content in the right order with minimum "
"alterations."
msgstr ""
"`<foo repeat=\"{{list}}\">`` will watch the mutations of a list. At the "
"beginning the ``<foo>`` element will be cloned and attached with each item "
"in list. When some items are added, removed or moved, the "
"``<foo>`元素列表将重新生成以最小的改动以正确的新内容。 ???"

#. type: Bullet: '* '
#: /home/dev/download/weex_doc/weex/doc/advanced/how-data-binding-works.md:30
msgid ""
"`<foo if=\"{{condition}}\" repeat=\"{{list}}\">` will process `repeat` first"
" and `if` the second. In another way, it will walk through each item in "
"list, if the item's condition value is true, a `<foo>` element will be "
"cloned and attached with this certain item value."
msgstr ""
"`<foo if=\"{{condition}}\" repeat=\"{{list}}\">`` will process ``repeat`` "
"first and ``if`` the second. In another way, it will walk through each item "
"in list, if the item's condition value is true, a ``<foo>`元素将被克隆并附有一定的项目价值。 "
"???"

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/advanced/how-data-binding-works.md:31
msgid ""
"Compared with virtual DOM diff algorithm, we just \"diff\" the data and only"
" calculate/update the virtual DOM with minimum alterations for each user "
"interaction or data-change operation. So it's more lightweight and fast "
"especially for small views in mobile devices."
msgstr ""
"Compared with virtual DOM diff algorithm, we just \"diff\" the data and only"
" calculate/update the virtual DOM with minimum alterations for each user "
"interaction or data-change operation. So it's more lightweight and fast "
"especially for small views in mobile devices."
