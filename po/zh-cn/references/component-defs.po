msgid ""
msgstr ""
"Content-Type: text/plain; charset=UTF-8\n"

#. type: Title #
#: /home/dev/download/weex_doc/weex/doc/references/component-defs.md:1
#, no-wrap
msgid "Component Definition"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/references/component-defs.md:4
#, no-wrap
msgid ""
"A component definition is a set of options to describe a component. It's "
"always assigned to `module.exports` in `<script>`.\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/references/component-defs.md:10
#, no-wrap
msgid ""
"```javascript\n"
"module.exports = {\n"
"  // a set of options here\n"
"}\n"
"```\n"
msgstr ""

#. type: Title ##
#: /home/dev/download/weex_doc/weex/doc/references/component-defs.md:11
#, no-wrap
msgid "Data & Methods options"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/references/component-defs.md:25
#, no-wrap
msgid ""
"```javascript\n"
"module.exports = {\n"
"  data: function () {\n"
"    return {x: 1, y: 2}\n"
"  },\n"
"  methods: {\n"
"    doThis: function () {...},\n"
"    doThat: function () {...}\n"
"  },\n"
"  ...\n"
"}\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/references/component-defs.md:28
msgid ""
"The `data` option is a function that return a observable data object for "
"this ViewModel.  The `methods` option is a map which contains all ViewModel "
"methods."
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/references/component-defs.md:30
msgid ""
"Each `data` or `methods` property will be proxied to the ViewModel "
"instance. So you can read and write data with `this.x`, also you can call "
"methods with `this.doThis(...)`."
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/references/component-defs.md:32
msgid "A whole example:"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/references/component-defs.md:50
#, no-wrap
msgid ""
"```\n"
"<template>\n"
"  <div style=\"width: {{w}}; height: {{h}}; background-color: red;\" "
"onclick=\"update\"></div>\n"
"</template>\n"
"<script>\n"
"  module.exports = {\n"
"    data: function () {\n"
"      return {w: 750, h: 200}\n"
"    },\n"
"    methods: {\n"
"      update: function (e) {\n"
"        this.h += 200\n"
"      }\n"
"    }\n"
"  }\n"
"</script>\n"
"```\n"
msgstr ""

#. type: Title ##
#: /home/dev/download/weex_doc/weex/doc/references/component-defs.md:51
#, no-wrap
msgid "Events options"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/references/component-defs.md:70
#, no-wrap
msgid ""
"```javascript\n"
"module.exports = {\n"
"  data: ...,\n"
"  methods: {\n"
"    foo: function () {\n"
"      ...\n"
"      this.$emit('customtype1', data)\n"
"    }\n"
"  },\n"
"  events: {\n"
"    customtype1: function (e) {\n"
"      console.log(e.type, e.detail)\n"
"    }\n"
"  },\n"
"  ...\n"
"}\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/references/component-defs.md:72
msgid ""
"The `events` options could allow you to add custom event listeners when "
"ViewModel created. Then it will listen these type of events and handle them "
"by the function-type value."
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/references/component-defs.md:74
msgid ""
"The first argument is a event object which contains event data in "
"`e.detail`."
msgstr ""

#. type: Title ##
#: /home/dev/download/weex_doc/weex/doc/references/component-defs.md:75
#, no-wrap
msgid "Lifecycle options"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/references/component-defs.md:93
#, no-wrap
msgid ""
"```javascript\n"
"module.exports = {\n"
"  data: ...,\n"
"  methods: ...,\n"
"  init: function () {\n"
"    console.log('ViewModel constructor begins')\n"
"  },\n"
"  created: function () {\n"
"    console.log('Data observation finished')\n"
"  },\n"
"  ready: function () {\n"
"    console.log('Virtual DOM finished')\n"
"  },\n"
"  ...\n"
"}\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/references/component-defs.md:95
msgid ""
"Weex ViewModel now supports these lifecycle hook functions which could be "
"write as component options:"
msgstr ""

#. type: Bullet: '* '
#: /home/dev/download/weex_doc/weex/doc/references/component-defs.md:98
msgid "`init`: fired at the beginning of a ViewModel constructor call."
msgstr ""

#. type: Bullet: '* '
#: /home/dev/download/weex_doc/weex/doc/references/component-defs.md:98
msgid ""
"`created`: fired when ViewModel observes default data but not compile the "
"template."
msgstr ""

#. type: Bullet: '* '
#: /home/dev/download/weex_doc/weex/doc/references/component-defs.md:98
msgid ""
"`ready`: fired when ViewModel observes default data and compiles the "
"template to generate virtual DOM finally."
msgstr ""