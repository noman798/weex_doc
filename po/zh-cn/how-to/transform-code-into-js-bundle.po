#. type: Title #
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:1
#, no-wrap
msgid "Transform Code into Js Bundle"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:5
msgid ""
"Paragraphs [Maintain Your Component "
"Code](./maintain-your-component-code.md), [Maintain Your Component "
"Code](./maintain-your-component-code.md) and [Require 3rd Party "
"Libs](./require-3rd-party-libs.md) show us how to write and organize weex "
"code. However, Weex DSL code must be transformed to `js bundle` so that `js "
"framework` can parse and execute it for iOS, Android and HTML5 portal. For "
"more information, please refer to [How It Works ](/advanced/how-it-works.md) "
"and [JS Bundle Format](../specs/js-bundle-format.md)."
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:7
msgid ""
"Now come back to the topic `transform code into js bundle`. There are "
"several ways to achieve the goal."
msgstr ""

#. type: Title ##
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:8
#, no-wrap
msgid "transformer"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:13
msgid "```bash tnpm install weex-transformer ```"
msgstr ""

#. type: Title ###
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:14
#, no-wrap
msgid "CLI Tool"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:18
#, no-wrap
msgid ""
"```\n"
"  Usage: transformer [options] <file...>\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:20
#, no-wrap
msgid "  Options:\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:27
#, no-wrap
msgid ""
"    -h, --help               output usage information\n"
"    -V, --version            output the version number\n"
"    -l, --oldFormat [value]  whether to transform to old format (default: "
"false)\n"
"    -e, --isEntry [value]    whether is an entry module which has "
"`bootstrap` (default: true)\n"
"    -o, --output [path]      the output file dirname\n"
"```\n"
msgstr ""

#. type: Title ###
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:28
#, no-wrap
msgid "API"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:31
#, no-wrap
msgid "** transform(name, code, path, elements, config) **\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:36
msgid ""
"```javascript var transformer = require('weex-transformer')  var output = "
"transformer.transform('foo', '/* code here */', '.', {})  ```"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:38
msgid "params:"
msgstr ""

#. type: Bullet: '- '
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:46
msgid "`name`: string, current bundle name"
msgstr ""

#. type: Bullet: '- '
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:46
msgid "`code`: string, source code"
msgstr ""

#. type: Bullet: '- '
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:46
msgid ""
"`path`: string *optional*, useful when find custom component in a certain "
"path"
msgstr ""

#. type: Bullet: '- '
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:46
msgid "`elements`: object *optional*, existed custom component map"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:46
#, no-wrap
msgid ""
"- `config`: object *optional*\n"
"    * `oldFormat`: whether to transform to old format (default: false)\n"
"    * `isEntry`: whether is an entry module which has `bootstrap` (default: "
"true)\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:48
msgid "returns:"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:52
#, no-wrap
msgid ""
"- an object with keys\n"
"    * `result`: string, all custom components `define()` and final "
"`bootstrap()`\n"
"    * `logs`: array, corresponding warning & error logs\n"
msgstr ""

#. type: Title ##
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:53
#, no-wrap
msgid "gulp weex"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:58
msgid "```bash tnpm install gulp-weex ```"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:62
msgid "```javascript var gulp = require('gulp')  var weex = require('gulp-weex')"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:69
#, no-wrap
msgid ""
"gulp.task('default', function () {\n"
"  return gulp.src('src/*.html')\n"
"    .pipe(weex({}))\n"
"    .pipe(gulp.dest('./dest'))\n"
"})\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:71
msgid "Options:"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/transform-code-into-js-bundle.md:73
msgid ""
"- `oldFormat`: whether to transform to old format (default: false)  - "
"`isEntry`: whether is an entry module which has `bootstrap` (default: true)"
msgstr ""