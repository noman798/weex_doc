# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2016-06-22 18:24+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:1
#, no-wrap
msgid "How to customize native APIs ?"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:5
#, no-wrap
msgid ""
"Weex SDK provides only rendering capabilities, rather than have other "
"capabilities, such as network, picture, and URL redirection. If you want the "
"these features, you need to implement it.   \n"
"The example below will describe how to extend weex with native logic or "
"'bridge' your existed native code.\n"
msgstr ""

#. type: Title ##
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:6
#, no-wrap
msgid "A URLHelper Example"
msgstr ""

#. type: Title ###
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:7
#, no-wrap
msgid "Create your own `WXModule` in native:   "
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:25
#, no-wrap
msgid ""
"```java\n"
"public class URLHelperModule extends WXModule{\n"
"\tprivate static final String "
"WEEX_CATEGORY=\"com.taobao.android.intent.category.WEEX\";\n"
"\t@WXModuleAnno\n"
"\tpublic void openURL(String url){\n"
"\t\tif (TextUtils.isEmpty(url)) {\n"
"\t\t\treturn;\n"
"\t\t}\n"
"\t\tStringBuilder builder=new StringBuilder(\"http:\");\n"
"\t\tbuilder.append(url);\n"
"\t\tUri uri = Uri.parse(builder.toString());\n"
"        Intent intent = new Intent(Intent.ACTION_VIEW, uri);\n"
"\t\tintent.addCategory(WEEX_CATEGORY);\n"
"        mWXSDKInstance.getContext().startActivity(intent);\n"
"\t}\n"
"}\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:27 /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:64
msgid "```"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:30
msgid ""
"Notice the `@WXModuleAnno`, use this annotation to mark the methods you "
"wanna expose to javascript.  If your also want to callback to javascript, "
"you should define a `callbackId` parameter to received 'JS callback function "
"id':"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:33
msgid "```java public class URLHelperModule extends WXModule{"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:44
#, no-wrap
msgid ""
"\t@WXModuleAnno\n"
"\tpublic void openURL(String url,String callbackId){\n"
"\t\t//...\n"
"\t\t//callback to javascript \n"
"\t\tMap<String, Object> result = new HashMap<String, Object>();\n"
"\t\tresult.put(\"ts\", System.currentTimeMillis());\n"
"\t\tWXBridgeManager.getInstance().callback(mWXSDKInstance.getInstanceId(), "
"callbackId, result);\n"
"\t}\n"
"}\n"
"```\n"
msgstr ""

#. type: Title ###
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:46
#, no-wrap
msgid "Register your module to engine:   "
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:55
#, no-wrap
msgid ""
"```\n"
"try {\n"
"\t WXSDKEngine.registerModule(\"myURL\", URLHelperModule.class);//'myURL' is "
"the name you'll use in javascript\n"
"\t} catch (WXException e) {\n"
"\t   WXLogUtils.e(e.getMessage());\n"
"\t}\n"
"```\n"
msgstr ""

#. type: Title ###
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:55
#, no-wrap
msgid "Now, you can use eventModule in javascript like this:   "
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:62
#, no-wrap
msgid ""
"```javascript\n"
"let URLHelper = require('@weex-module/myURL');//same as you registered\n"
"URLHelper.openURL(\"http://www.taobao.com\",function(ts){\n"
"\tconsole.log(\"url is open at \"+ts);\n"
"});\n"
msgstr ""

#. type: Title ##
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:66
#, no-wrap
msgid "Things you need to note:"
msgstr ""

#. type: Bullet: '1. '
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:67
msgid "Customize components must extend WXModule"
msgstr ""

#. type: Bullet: '2. '
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:68
msgid ""
"@WXModuleAnno annotation must be added, as it is the only the way to "
"recognized by Weex"
msgstr ""

#. type: Bullet: '3. '
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:69
msgid "The access levels of mehtod must be **public**"
msgstr ""

#. type: Bullet: '4. '
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:70
msgid "The module class also can not be an inner class"
msgstr ""

#. type: Bullet: '5. '
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:73
msgid "Customize can not be obfuscated by tools like ProGuard"
msgstr ""

#. type: Bullet: '6. '
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:73
msgid ""
"Module methods will be invoked in UI thread, do not put time consuming "
"operation there"
msgstr ""

#. type: Bullet: '7. '
#: /home/dev/download/weex_doc/weex/doc/how-to/cuszomize-native-apis.md:73
msgid ""
"Weex params can be int, double, float, String, Map, List, self-defined class "
"that implements WXObject interface"
msgstr ""
