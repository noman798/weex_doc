msgid ""
msgstr ""
"Content-Type: text/plain; charset=UTF-8\n"

#. type: Title #
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:1
#, no-wrap
msgid "Composed Component"
msgstr "组成成分 ???"

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:4
msgid ""
"if some part of weex file is repeated often , you could create a composed "
"component represent these part."
msgstr "如果长文件的某些部分重复，你可以创建一个代表这些部分组成。 ???"

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:6
#, no-wrap
msgid "you can use `<we-element>` tag to create composed component, the value of `name` attribute is the component name.\n"
msgstr "你可以使用`<we-element>`` tag to create composed component, the value of ``name`属性是组件的名称。 ???\n"

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:25
#, no-wrap
msgid ""
"```html\n"
"<we-element name=\"foo\">\n"
"  <template>\n"
"    <container style=\"flex-direction: row;\">\n"
"      <image src=\"{{image}}\"></image>\n"
"      <text>{{title}}</text>\n"
"    </container>\n"
"  </template>\n"
"  <script>\n"
"    module.exports = {\n"
"      data: {\n"
"        title: null,\n"
"        image: null\n"
"      }\n"
"    }\n"
"  </script>\n"
"</we-element>\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:27
#, no-wrap
msgid "Content of `<we-element>` tag is the same as normal weex file, consists of `<template>`, `<style>` and `<script>` .\n"
msgstr "内容`<we-element>`` tag is the same as normal weex file, consists of ``<template>``, ``<style>`` and ``<script>`。 ???\n"

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:29
msgid "Once composed component been defined, you can use it like following."
msgstr "一旦组成组件被定义，你可以使用它像以下。 ???"

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:47
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:76
#, no-wrap
msgid ""
"```html\n"
"<we-element name=\"foo\">\n"
"  <template>\n"
"    <container style=\"flex-direction: row;\">\n"
"      <image src=\"{{image}}\"></image>\n"
"      <text>{{title}}</text>\n"
"    </container>\n"
"  </template>\n"
"  <script>\n"
"    module.exports = {\n"
"      data: {\n"
"        title: null,\n"
"        image: null\n"
"      }\n"
"    }\n"
"  </script>\n"
"</we-element>\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:52
#, no-wrap
msgid ""
"<template>\n"
"  <foo title=\"...\" image=\"...\"></foo>\n"
"</template>\n"
"```\n"
msgstr ""
"<模板> ???\n"
"< foo标题=“…”形象=“…”> < / foo > ???\n"
"< /模板> ???\n"
"```` ???\n"

#. type: Title ##
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:53
#, no-wrap
msgid "Nesting Component"
msgstr "嵌套组件 ???"

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:56
msgid ""
"Composed component supports nesting. For easy access nesting component, you "
"should name nesting component with \"parent name and hyphen\" prefix."
msgstr ""
"组合组件支持嵌套。为方便嵌套的组件，你应该叫嵌套组件“父母姓名和字号”前"
"缀。 ???"

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:58
msgid "for example:"
msgstr "例如： ???"

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:93
#, no-wrap
msgid ""
"<we-element name=\"foo-list\">\n"
"  <template>\n"
"    <container>\n"
"      <text>{{description}}</text>\n"
"      <foo repeat=\"{{list}}\" title=\"{{text}}\" image=\"{{img}}\"></foo>\n"
"    </container>\n"
"  </template>\n"
"  <script>\n"
"    module.exports = {\n"
"      data: {\n"
"        description: '',\n"
"        list: []\n"
"      }\n"
"    }\n"
"  </script>\n"
"</we-element>\n"
msgstr ""
"<我们的元素名称=“foo”名单> ???\n"
"<模板> ???\n"
"<集装箱> ???\n"
"<文本> { { } } < /文本> { { } } ???\n"
"< foo =“{ {列表重复} }”title=“{ {文字} }”形象=“{ { IMG } }”> < / foo > ???\n"
"< /容器> ???\n"
"< /模板> ???\n"
"<脚本> ???\n"
"module.exports = { ???\n"
"数据：{ ???\n"
"描述：“， ???\n"
"列表：[] ???\n"
"} ???\n"
"} ???\n"
"< /脚本> ???\n"
"< /我们元素> ???\n"

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:97
#, no-wrap
msgid ""
"<template>\n"
"  <foo-list list=\"{{list}}\"></foo-list>\n"
"</template>\n"
msgstr ""
"<模板> ???\n"
"< foo列表”{ {表} }”> < / foo列表> ???\n"
"< /模板> ???\n"

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:111
#, no-wrap
msgid ""
"<script>\n"
"  module.exports = {\n"
"    data: {\n"
"      list: [\n"
"        {text: '...', img: '...'},\n"
"        {text: '...', img: '...'},\n"
"        {text: '...', img: '...'},\n"
"        ...\n"
"      ]\n"
"    }\n"
"  }\n"
"</script>\n"
"```\n"
msgstr ""
"<脚本> ???\n"
"module.exports = { ???\n"
"数据：{ ???\n"
"目录：[???\n"
"{文字：'…'，IMG：'…' }， ???\n"
"{文字：'…'，IMG：'…' }， ???\n"
"{文字：'…'，IMG：'…' }， ???\n"
"… ???\n"
"] ???\n"
"} ???\n"
"} ???\n"
"< /脚本> ???\n"
"```` ???\n"

#. type: Title ##
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:113
#, no-wrap
msgid "Notes"
msgstr "笔记 ???"

#. type: Bullet: '- '
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:118
msgid "Every composed component have an independent `<style>` work scope."
msgstr "每一个组成部分有一个独立的`<style>`工作范围。 ???"

#. type: Bullet: '- '
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:118
msgid ""
"If child component have `id` attribute, you can access the context of the "
"child component by `this.$vm(id)`. See more about [find an element](./id.md)."
msgstr ""
"如果孩子成分`id`` attribute, you can access the context of the child "
"component by ``this.$vm(_15_)`。了解更多关于[元](./id.md)找到一个。 ???"

#. type: Bullet: '- '
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:118
msgid ""
"Please refer to [communicate between components](./comm.md) for more "
"communication issues."
msgstr "请参阅[](./comm.md)组件之间的交流更多的沟通问题。 ???"

#. type: Plain text
#: /home/dev/download/weex_doc/weex/doc/syntax/composed-component.md:119
msgid "Next is how to [find an element](./id.md)."
msgstr "二是如何[找到元](./id.md)。 ???"